// Generated by view binder compiler. Do not edit!
package com.example.sa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CalculationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox checkBoxMeat;

  @NonNull
  public final CheckBox checkBoxTravelAir;

  @NonNull
  public final CheckBox checkBoxTravelTrain;

  @NonNull
  public final EditText editTextAirTravel;

  @NonNull
  public final EditText editTextElectricity;

  @NonNull
  public final EditText editTextFuel;

  @NonNull
  public final EditText editTextHeating;

  @NonNull
  public final EditText editTextMeaat;

  @NonNull
  public final EditText editTextMilk;

  @NonNull
  public final EditText editTextTrainTravel;

  @NonNull
  public final EditText editTextVegatablesFruits;

  @NonNull
  public final Spinner electricitySpinner;

  @NonNull
  public final Spinner heatingSpinner;

  @NonNull
  public final ImageView imageView12;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView26;

  @NonNull
  public final TextView textView27;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final Spinner vehicleSpinner;

  private CalculationBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox checkBoxMeat,
      @NonNull CheckBox checkBoxTravelAir, @NonNull CheckBox checkBoxTravelTrain,
      @NonNull EditText editTextAirTravel, @NonNull EditText editTextElectricity,
      @NonNull EditText editTextFuel, @NonNull EditText editTextHeating,
      @NonNull EditText editTextMeaat, @NonNull EditText editTextMilk,
      @NonNull EditText editTextTrainTravel, @NonNull EditText editTextVegatablesFruits,
      @NonNull Spinner electricitySpinner, @NonNull Spinner heatingSpinner,
      @NonNull ImageView imageView12, @NonNull ImageView imageView2, @NonNull TextView textView25,
      @NonNull TextView textView26, @NonNull TextView textView27, @NonNull TextView textView3,
      @NonNull Spinner vehicleSpinner) {
    this.rootView = rootView;
    this.checkBoxMeat = checkBoxMeat;
    this.checkBoxTravelAir = checkBoxTravelAir;
    this.checkBoxTravelTrain = checkBoxTravelTrain;
    this.editTextAirTravel = editTextAirTravel;
    this.editTextElectricity = editTextElectricity;
    this.editTextFuel = editTextFuel;
    this.editTextHeating = editTextHeating;
    this.editTextMeaat = editTextMeaat;
    this.editTextMilk = editTextMilk;
    this.editTextTrainTravel = editTextTrainTravel;
    this.editTextVegatablesFruits = editTextVegatablesFruits;
    this.electricitySpinner = electricitySpinner;
    this.heatingSpinner = heatingSpinner;
    this.imageView12 = imageView12;
    this.imageView2 = imageView2;
    this.textView25 = textView25;
    this.textView26 = textView26;
    this.textView27 = textView27;
    this.textView3 = textView3;
    this.vehicleSpinner = vehicleSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CalculationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CalculationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.calculation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CalculationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBoxMeat;
      CheckBox checkBoxMeat = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxMeat == null) {
        break missingId;
      }

      id = R.id.checkBoxTravelAir;
      CheckBox checkBoxTravelAir = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxTravelAir == null) {
        break missingId;
      }

      id = R.id.checkBoxTravelTrain;
      CheckBox checkBoxTravelTrain = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxTravelTrain == null) {
        break missingId;
      }

      id = R.id.editTextAirTravel;
      EditText editTextAirTravel = ViewBindings.findChildViewById(rootView, id);
      if (editTextAirTravel == null) {
        break missingId;
      }

      id = R.id.editTextElectricity;
      EditText editTextElectricity = ViewBindings.findChildViewById(rootView, id);
      if (editTextElectricity == null) {
        break missingId;
      }

      id = R.id.editTextFuel;
      EditText editTextFuel = ViewBindings.findChildViewById(rootView, id);
      if (editTextFuel == null) {
        break missingId;
      }

      id = R.id.editTextHeating;
      EditText editTextHeating = ViewBindings.findChildViewById(rootView, id);
      if (editTextHeating == null) {
        break missingId;
      }

      id = R.id.editTextMeaat;
      EditText editTextMeaat = ViewBindings.findChildViewById(rootView, id);
      if (editTextMeaat == null) {
        break missingId;
      }

      id = R.id.editTextMilk;
      EditText editTextMilk = ViewBindings.findChildViewById(rootView, id);
      if (editTextMilk == null) {
        break missingId;
      }

      id = R.id.editTextTrainTravel;
      EditText editTextTrainTravel = ViewBindings.findChildViewById(rootView, id);
      if (editTextTrainTravel == null) {
        break missingId;
      }

      id = R.id.editTextVegatablesFruits;
      EditText editTextVegatablesFruits = ViewBindings.findChildViewById(rootView, id);
      if (editTextVegatablesFruits == null) {
        break missingId;
      }

      id = R.id.electricitySpinner;
      Spinner electricitySpinner = ViewBindings.findChildViewById(rootView, id);
      if (electricitySpinner == null) {
        break missingId;
      }

      id = R.id.heatingSpinner;
      Spinner heatingSpinner = ViewBindings.findChildViewById(rootView, id);
      if (heatingSpinner == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.vehicleSpinner;
      Spinner vehicleSpinner = ViewBindings.findChildViewById(rootView, id);
      if (vehicleSpinner == null) {
        break missingId;
      }

      return new CalculationBinding((ConstraintLayout) rootView, checkBoxMeat, checkBoxTravelAir,
          checkBoxTravelTrain, editTextAirTravel, editTextElectricity, editTextFuel,
          editTextHeating, editTextMeaat, editTextMilk, editTextTrainTravel,
          editTextVegatablesFruits, electricitySpinner, heatingSpinner, imageView12, imageView2,
          textView25, textView26, textView27, textView3, vehicleSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
